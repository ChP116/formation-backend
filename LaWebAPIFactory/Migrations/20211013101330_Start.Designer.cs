// <auto-generated />
using System;
using LaWebAPIFactory.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaWebAPIFactory.Migrations
{
    [DbContext(typeof(FactoryContext))]
    [Migration("20211013101330_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LaWebAPIFactory.Models.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodePostal")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Zipcode");

                    b.Property<string>("Rue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Street");

                    b.Property<string>("Ville")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("City");

                    b.HasKey("Id");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Competence", b =>
                {
                    b.Property<int>("FormateurId")
                        .HasColumnType("int")
                        .HasColumnName("TrainerId");

                    b.Property<int>("MatiereId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.HasKey("FormateurId", "MatiereId");

                    b.HasIndex("MatiereId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Cursus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2")
                        .HasColumnName("Start_Date");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("End_Date");

                    b.Property<int?>("GestionnaireId")
                        .HasColumnType("int")
                        .HasColumnName("Manager_Id");

                    b.Property<string>("Intitule")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("GestionnaireId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Evaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commentaires")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("Comments");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleId");

                    b.Property<int>("Note")
                        .HasColumnType("int")
                        .HasColumnName("Grade");

                    b.Property<int?>("StagiaireId")
                        .HasColumnType("int")
                        .HasColumnName("TraineeId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("StagiaireId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Formateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Externe")
                        .HasColumnType("bit")
                        .HasColumnName("Extern");

                    b.Property<int?>("UtilisateurId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Trainer");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Duree")
                        .HasColumnType("int")
                        .HasColumnName("Duration");

                    b.Property<string>("Objectifs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Goals");

                    b.Property<string>("PreRequis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Requirements");

                    b.Property<string>("Programme")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CursusId")
                        .HasColumnType("int")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2")
                        .HasColumnName("Start_Date");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("End_Date");

                    b.Property<int>("Duree")
                        .HasColumnType("int")
                        .HasColumnName("Duration");

                    b.Property<int?>("FormateurId")
                        .HasColumnType("int")
                        .HasColumnName("TrainerId");

                    b.Property<int?>("MatiereId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.Property<int?>("SalleId")
                        .HasColumnType("int")
                        .HasColumnName("ClassroomId");

                    b.HasKey("Id");

                    b.HasIndex("CursusId");

                    b.HasIndex("FormateurId");

                    b.HasIndex("MatiereId");

                    b.HasIndex("SalleId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdresseId")
                        .HasColumnType("int")
                        .HasColumnName("AdressId");

                    b.Property<string>("Civilite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Civility");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lastname");

                    b.Property<string>("PersonneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PersonType");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Firstname");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Phonenumber");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.ToTable("Person");

                    b.HasDiscriminator<string>("PersonneType").HasValue("Personne");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdressId")
                        .HasColumnType("int");

                    b.Property<int?>("Capacite")
                        .HasColumnType("int")
                        .HasColumnName("Capacity");

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<bool>("Virtuel")
                        .HasColumnType("bit")
                        .HasColumnName("Virtual");

                    b.HasKey("Id");

                    b.HasIndex("AdressId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Stagiaire", b =>
                {
                    b.HasBaseType("LaWebAPIFactory.Models.Personne");

                    b.Property<int?>("CursusId")
                        .HasColumnType("int")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthdate");

                    b.HasIndex("CursusId");

                    b.HasDiscriminator().HasValue("Trainee");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Utilisateur", b =>
                {
                    b.HasBaseType("LaWebAPIFactory.Models.Personne");

                    b.Property<string>("Identifiant")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Login");

                    b.Property<string>("MotDePasse")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Role");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Competence", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Formateur", "Formateur")
                        .WithMany("Competences")
                        .HasForeignKey("FormateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaWebAPIFactory.Models.Matiere", "Matiere")
                        .WithMany("Competences")
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formateur");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Cursus", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Utilisateur", "Gestionnaire")
                        .WithMany()
                        .HasForeignKey("GestionnaireId");

                    b.Navigation("Gestionnaire");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Evaluation", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Module", "Module")
                        .WithMany("Evaluations")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LaWebAPIFactory.Models.Stagiaire", "Stagiaire")
                        .WithMany("Evaluations")
                        .HasForeignKey("StagiaireId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Module");

                    b.Navigation("Stagiaire");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Formateur", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Utilisateur", "Utilisateur")
                        .WithOne("Formateur")
                        .HasForeignKey("LaWebAPIFactory.Models.Formateur", "UtilisateurId");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Module", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Cursus", "Cursus")
                        .WithMany("Modules")
                        .HasForeignKey("CursusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LaWebAPIFactory.Models.Formateur", "Formateur")
                        .WithMany("Modules")
                        .HasForeignKey("FormateurId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LaWebAPIFactory.Models.Matiere", "Matiere")
                        .WithMany("Modules")
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LaWebAPIFactory.Models.Salle", "Salle")
                        .WithMany("Modules")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Cursus");

                    b.Navigation("Formateur");

                    b.Navigation("Matiere");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Personne", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Salle", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdressId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Stagiaire", b =>
                {
                    b.HasOne("LaWebAPIFactory.Models.Cursus", "Cursus")
                        .WithMany("Stagiaires")
                        .HasForeignKey("CursusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Cursus");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Cursus", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("Stagiaires");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Formateur", b =>
                {
                    b.Navigation("Competences");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Matiere", b =>
                {
                    b.Navigation("Competences");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Module", b =>
                {
                    b.Navigation("Evaluations");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Salle", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Stagiaire", b =>
                {
                    b.Navigation("Evaluations");
                });

            modelBuilder.Entity("LaWebAPIFactory.Models.Utilisateur", b =>
                {
                    b.Navigation("Formateur");
                });
#pragma warning restore 612, 618
        }
    }
}
